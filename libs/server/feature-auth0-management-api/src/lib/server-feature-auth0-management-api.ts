import axios from 'axios';

export interface TokenResponse {
  access_token: string;
  scope: string;
  expires_in: number;
  token_type: string;
}

export interface ApiCredentials {
  client_id: string;
  client_secret: string;
}

// Generated by https://quicktype.io

export interface UserData {
  created_at: string;
  email: string;
  email_verified: boolean;
  identities: Identity[];
  name: string;
  nickname: string;
  picture: string;
  updated_at: string;
  user_id: string;
  user_metadata: UserMetadata;
  last_ip: string;
  last_login: string;
  logins_count: number;
}

export interface Identity {
  connection: string;
  provider: string;
  user_id: string;
  isSocial: boolean;
}

export interface UserMetadata {
  [string: string]: unknown;
}

export async function getManagementApiToken(
  credentials: ApiCredentials
): Promise<TokenResponse> {
  const options = {
    method: 'POST',
    url: 'https://plan-it.us.auth0.com/oauth/token',
    headers: { 'content-type': 'application/json' },
    body: `{"client_id":"${credentials.client_id}","client_secret":"${credentials.client_secret}","audience":"https://plan-it.us.auth0.com/api/v2/","grant_type":"client_credentials"}`,
  };

  const response = await axios.post(options.url, options.body, {
    headers: options.headers,
  });

  return response.data;
}

export const getUserData = async (
  uid: string,
  accessToken: string
): Promise<UserData> => {
  const url = `https://plan-it.us.auth0.com/api/v2/users/${uid}`;
  const options = {
    method: 'GET',
    url: url,
    headers: {
      'content-type': 'application/json',
      authorization: `Bearer ${accessToken}`,
    },
  };

  return (
    await axios.get<UserData>(options.url, {
      headers: options.headers,
    })
  ).data;
};
